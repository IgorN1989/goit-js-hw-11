{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAUMC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,YAChCE,MAAOH,SAASC,cAAc,aAC9BG,gBAAiBJ,SAASC,cAAc,sBAEpCI,EAAoB,IAAI,EAAAC,EAAAC,mBACxBC,EAAkB,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CACvDC,aAAc,MACdC,aAAc,MAEVC,EAAW,IAAIC,sBAuErB,SAAoBC,GAClBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBACRC,G,MA1EgD,CAAEC,WAAY,UAChEC,EAAmB,E,SAmBRF,I,OAAAG,EAAUC,MAAAC,KAAAC,U,UAAVH,I,OAAAA,EAAfb,EAAAb,EAAA,CAAAa,EAAAiB,GAAAC,MAAA,SAAAC,I,IAEUC,EACAC,EACAC,E,2FAFa1B,EAAkB2B,c,UAA/BH,EAAII,EAAAC,KACJJ,EAAYD,EAAKC,WACjBC,EAASF,EAAKM,MAERC,OAAM,C,sBAChBC,EAAAC,OAAOC,QACL,4E,0BAKJC,EAAoBT,GAEfV,GACHgB,EAAAC,OAAOG,QAAQ,oBAA8BC,OAAVZ,EAAU,cAG/CT,GAAoBU,EAAOK,QAEJN,EACrBjB,EAAS8B,QAAQ7C,EAAKK,OAEtBU,EAAS+B,UAAU9C,EAAKK,O,kDAG1BkC,EAAAC,OAAOO,QAAQ,uD,yBAEfC,EAAYhD,EAAKM,iBACjBI,EAAgBuC,U,8EA9BKxB,MAAAC,KAAAC,U,CAkCzB,SAASe,EAAoBT,GAC3BjC,EAAKI,QAAQ8C,mBAAmB,aAAa,EAAAC,EAAAC,cAAanB,G,CAQ5D,SAASe,EAAYK,GACnBA,EAAQC,UAAUC,IAAI,Y,CA7DxBvD,EAAKC,KAAKuD,iBAAiB,UAE3B,SAAkBC,GAKhB,GAJAA,EAAIC,iBAoDN,WACE1D,EAAKI,QAAQuD,UAAY,GACzBpC,EAAmB,C,CArDnBqC,GAEArD,EAAkBsD,MAAQJ,EAAIK,cAAcC,SAASC,YAAYC,MAAMC,QAClE3D,EAAkBsD,MAErB,YADAtB,EAAAC,OAAO2B,KAAK,oCAId5D,EAAkB6D,YAoDCf,EAnDPrD,EAAKM,gBAoDjB+C,EAAQC,UAAUe,OAAO,aAnDzBhD,IAkDF,IAAqBgC,C","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { PixabayApiService } from './pixabay-service';\nimport { createMarkup } from './markup';\n\n// ===================================================================\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  gallery: document.querySelector('.gallery'),\n  guard: document.querySelector('.js-guard'),\n  loaderContainer: document.querySelector('.loader-container'),\n};\nconst pixabayApiService = new PixabayApiService();\nconst galleryLightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\nconst observer = new IntersectionObserver(onLoadMore, { rootMargin: '600px' });\nlet totalShownImages = 0;\n\nrefs.form.addEventListener('submit', onSearch);\n\nfunction onSearch(evt) {\n  evt.preventDefault();\n  clearGallery();\n\n  pixabayApiService.query = evt.currentTarget.elements.searchQuery.value.trim();\n  if (!pixabayApiService.query) {\n    Notify.info('Please, enter your search query.');\n    return;\n  }\n\n  pixabayApiService.resetPage();\n  showElement(refs.loaderContainer);\n  loadImages();\n}\n\nasync function loadImages() {\n  try {\n    const data = await pixabayApiService.fetchImages();\n    const totalHits = data.totalHits;\n    const images = data.hits;\n\n    if (!images.length) {\n      Notify.warning(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    appendGalleryMarkup(images);\n\n    if (!totalShownImages) {\n      Notify.success(`Hooray! We found ${totalHits} images.`);\n    }\n\n    totalShownImages += images.length;\n\n    if (totalShownImages < totalHits) {\n      observer.observe(refs.guard);\n    } else {\n      observer.unobserve(refs.guard);\n    }\n  } catch (err) {\n    Notify.failure('Oops! Something went wrong! Try reloading the page!');\n  } finally {\n    hideElement(refs.loaderContainer);\n    galleryLightbox.refresh();\n  }\n}\n\nfunction appendGalleryMarkup(images) {\n  refs.gallery.insertAdjacentHTML('beforeend', createMarkup(images));\n}\n\nfunction clearGallery() {\n  refs.gallery.innerHTML = '';\n  totalShownImages = 0;\n}\n\nfunction hideElement(element) {\n  element.classList.add('is-hidden');\n}\n\nfunction showElement(element) {\n  element.classList.remove('is-hidden');\n}\n\nfunction onLoadMore(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      loadImages();\n    }\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$93b54f497d416715$var$refs","form","document","querySelector","gallery","guard","loaderContainer","$93b54f497d416715$var$pixabayApiService","$hjiBg","PixabayApiService","$93b54f497d416715$var$galleryLightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","$93b54f497d416715$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$93b54f497d416715$var$loadImages","rootMargin","$93b54f497d416715$var$totalShownImages","$93b54f497d416715$var$_loadImages","apply","this","arguments","$2TvXO","mark","_callee","data","totalHits","images","fetchImages","_ctx","sent","hits","length","$h6c0i","Notify","warning","$93b54f497d416715$var$appendGalleryMarkup","success","concat","observe","unobserve","failure","$93b54f497d416715$var$hideElement","refresh","insertAdjacentHTML","$1KhuP","createMarkup","element","classList","add","addEventListener","evt","preventDefault","innerHTML","$93b54f497d416715$var$clearGallery","query","currentTarget","elements","searchQuery","value","trim","info","resetPage","remove"],"version":3,"file":"infinite-scroll.d56964ba.js.map"}